{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/cake/cake.component.css","webpack:///./src/app/cake/cake.component.html","webpack:///./src/app/cake/cake.component.ts","webpack:///./src/app/http.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<head>\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\"\\n  integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\"\\n  crossorigin=\\\"anonymous\\\">\\n  <style>\\n    #wrapper {\\n      background-color: lightgrey;\\n    }\\n    h2 {\\n      text-align: center;\\n      padding: 10px;\\n      color: rgb(218, 114, 131);\\n    }\\n    #blueline {\\n      height: 2px;\\n      background-color: blue;\\n    }\\n    #main {\\n      padding: 10px;\\n    }\\n    #main h4 {\\n      padding-left: 25px;\\n    }\\n    #allcakes {\\n      margin: 10px;\\n      width: 800px;\\n      display: inline-block;\\n      vertical-align: top;\\n      max-height: 500px;\\n      overflow: auto;\\n    }\\n    #newcake {\\n      display: inline-block;\\n      margin: 15px;\\n      margin-top: 40px;\\n      width: 400px;\\n      background-color: rgb(169, 100, 209);\\n      border-radius: 10px;\\n      padding: 8px;\\n      padding-left: 20px;\\n    }\\n    #newcake h4 {\\n      padding-left: 10px;\\n    }\\n    #newcake input[type = \\\"text\\\"]{\\n      width: 60%;\\n    }\\n    #newcake input[type = \\\"submit\\\"] {\\n      background-color: rgb(41, 84, 201);\\n      border: none;\\n      color: white;\\n      padding: 10px;\\n      text-align: center;\\n      text-decoration: none;\\n      display: inline-block;\\n      font-size: 16px;\\n      margin: 4px 2px;\\n      border-radius: 10px;\\n    }\\n    #cakeinfo {\\n      background-color: rgb(173, 179, 230);\\n      margin: 15px;\\n      padding: 15px;\\n      border-radius: 10px;\\n    }\\n    #cakeinfo img {\\n      width: 250px;\\n      display: inline-block;\\n      cursor: pointer;\\n    }\\n    #reviewform {\\n      display: inline-block;\\n      vertical-align: top;\\n      margin-left: 20px;\\n      margin-top: 15px;\\n      background-color: lightgreen;\\n      padding: 15px;\\n      padding-left: 30px;\\n      padding-right: 50px;\\n      border-radius: 8px;\\n    }\\n    #reviewform input[type = \\\"submit\\\"] {\\n      background-color: rgb(103, 165, 32);\\n      border: none;\\n      color: white;\\n      padding: 10px;\\n      text-align: center;\\n      text-decoration: none;\\n      display: inline-block;\\n      font-size: 16px;\\n      margin: 4px 2px;\\n      border-radius: 10px;\\n    }\\n  </style>\\n</head>\\n<body>\\n  <div id = \\\"wrapper\\\">\\n    <h2>Welcome to Rate My Cakes!</h2>\\n    <div id = \\\"blueline\\\"></div>\\n    <div id = \\\"main\\\">\\n      <h4>Submit a new cake by filling out the form on the right! You can also leave a review for each of\\n        the cakes already submitted by the users.</h4>\\n      <h4>Click on the images of the cake to view a larger image of it and to see the\\n        reviews submitted by the users!</h4>\\n      <div id = \\\"allcakes\\\">\\n        <div id = \\\"cakeinfo\\\" *ngFor = \\\"let cake of cakes\\\">\\n          <a (click) = \\\"getCake(cake)\\\"><img src = {{cake.image}}></a>\\n          <div id = \\\"reviewform\\\">\\n            <form #newReview = \\\"ngForm\\\" (submit) = \\\"reviewCake(cake, newReview.value)\\\">\\n              Rating: <br>\\n              <select name = \\\"newReview.rate\\\" ngModel>\\n                <option value = \\\"5\\\">5 stars</option>\\n                <option value = \\\"4\\\">4</option>\\n                <option value = \\\"3\\\">3</option>\\n                <option value = \\\"2\\\">2</option>\\n                <option value = \\\"1\\\">1</option>\\n              </select>\\n              <br><br>\\n              Comment: <br>\\n              <textarea name = \\\"newReview.comment\\\" cols = \\\"45\\\" rows = \\\"4\\\" ngModel></textarea>\\n              <br>\\n              <br>\\n              <input type = \\\"submit\\\" value = \\\"Submit Review!\\\"/>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n      <div id = \\\"newcake\\\">\\n        <h4>Submit a new cake!</h4>\\n        <form (submit) = \\\"createCake()\\\">\\n          Baker name: <br>\\n          <input type = \\\"text\\\" name = \\\"newCake.name\\\" [(ngModel)] = \\\"newCake.name\\\" /><br>\\n          Image URL: <br>\\n          <input type = \\\"text\\\" name = \\\"newCake.image\\\" [(ngModel)] = \\\"newCake.image\\\" />\\n          <br>\\n          <br>\\n          <input type = \\\"submit\\\" value = \\\"Submit Cake!\\\"/>\\n        </form>\\n      </div>\\n    </div>\\n    <app-cake *ngIf = \\\"cake\\\" [getCake] = \\\"cake\\\"></app-cake>\\n  </div>\\n</body>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpService } from \"./http.service\";\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'RateMyCakes';\n  cakes = [];\n  errors: any;\n  cake: any;\n  newCake: any;\n  newReview: any;\n\n  constructor(private _httpService: HttpService){}\n\n  ngOnInit(){\n    this.getAllCakes();\n    this.newCake = { name: \"\", image: \"\" };\n    this.newReview = { rate: \"\", comment: \"\" };\n  }\n\n  getAllCakes() {\n    let c = this._httpService.getAll();\n    c.subscribe(data => {\n      console.log(\"Got all cakes!\", data);\n      this.cakes = data[\"cakes\"];\n    });\n    this.newReview = { rate: \"\", comment: \"\" };\n  }\n\n  createCake() {\n    this.errors = null;\n    let createNew = this._httpService.createCake({name: this.newCake.name,\n      image: this.newCake.image});\n    createNew.subscribe(\n      newdata => {console.log(\"Cake submitted!\", newdata)});\n    this.newCake = { name: \"\", image: \"\" };\n    this.getAllCakes();\n  }\n\n  getCake(cake) {\n    let c = this._httpService.getCake(cake);\n    c.subscribe(data => {\n      console.log(\"Got the cake!\", data);\n      this.cake = data[\"cake\"];\n\n      if (this.cake.reviews.length == 0) {\n        this.cake[\"avg\"] = \"(No rating)\";\n      }\n      else {\n        var count = 0;\n        var sum = 0;\n        for (let rating of this.cake.reviews) {\n          count++;\n          sum = sum + rating.rate;\n        }\n        let avg = (sum / count).toFixed(2);\n        this.cake[\"avg\"] = avg;\n      }\n    });\n  }\n\n  reviewCake(cake, review) {\n    this.newReview.rate = review[\"newReview.rate\"];\n    this.newReview.comment = review[\"newReview.comment\"];\n\n    let r = this._httpService.reviewCake(cake, this.newReview);\n    r.subscribe(data => {\n      console.log(\"Got the review!\", data);\n    });\n    this.newReview = { rate: \"\", comment: \"\" };\n    this.getCake(cake);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HttpService } from \"./http.service\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CakeComponent } from './cake/cake.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CakeComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [HttpService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<head>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css\\\"\\n    integrity=\\\"sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO\\\"\\n    crossorigin=\\\"anonymous\\\">\\n    <style>\\n      #wrapper {\\n        padding: 15px;\\n        padding-left: 60px;\\n        background-color: lightgrey;\\n      }\\n      img {\\n        width: 400px;\\n        display: inline-block;\\n      }\\n      #reviews {\\n        width: 700px;\\n        padding-left: 100px;\\n        display: inline-block;\\n        vertical-align: top;\\n        max-height: 600px;\\n        overflow: auto;\\n      }\\n      #review {\\n        margin: 10px;\\n        padding: 15px;\\n        background-color: rgb(182, 173, 230);\\n        border-radius: 8px;\\n      }\\n      h3 {\\n        margin-left: 20px;\\n      }\\n    </style>\\n  </head>\\n  <body>\\n    <div id = \\\"wrapper\\\">\\n      <div id = \\\"cake\\\">\\n        <h2>Baked by {{getCake.name}}</h2>\\n        <img src = {{getCake.image}}>\\n        <div id = \\\"reviews\\\">\\n          <h3>Average rating: {{getCake.avg}}</h3>\\n          <div id = \\\"review\\\" *ngFor = \\\"let r of getCake.reviews\\\">\\n            <h4>Rating: {{r.rate}}</h4>\\n            <h6>{{r.comment}}</h6>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </body>\"","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-cake',\n  templateUrl: './cake.component.html',\n  styleUrls: ['./cake.component.css']\n})\nexport class CakeComponent implements OnInit {\n  @Input() getCake: any;\n  @Input() avg: Number;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n  constructor(private _http: HttpClient) { }\n\n  getAll(){\n    return this._http.get(\"/cakes\");\n  }\n\n  createCake(newcake){\n    return this._http.post(\"/cakes\", newcake);\n  }\n\n  getCake(cake) {\n    return this._http.get(\"/cakes/\" + cake._id);\n  }\n\n  reviewCake(cake, review) {\n    return this._http.post(\"/cakes/\" + cake._id, review);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n"],"sourceRoot":""}